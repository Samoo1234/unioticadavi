-- Criar tabela configuracoes_horarios se não existir

-- 1. Verificar se a tabela existe
SELECT EXISTS (
  SELECT FROM information_schema.tables 
  WHERE table_schema = 'public' 
  AND table_name = 'configuracoes_horarios'
) as tabela_existe;

-- 2. Criar tabela se não existir
CREATE TABLE IF NOT EXISTS configuracoes_horarios (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  filial_id BIGINT NOT NULL REFERENCES filiais(id),
  horario_inicio TIME NOT NULL DEFAULT '08:00',
  horario_fim TIME NOT NULL DEFAULT '18:00',
  intervalo_minutos INTEGER NOT NULL DEFAULT 30,
  horarios_almoco JSONB DEFAULT '{"inicio": "12:00", "fim": "13:00"}',
  dias_funcionamento JSONB DEFAULT '["segunda", "terca", "quarta", "quinta", "sexta"]',
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  UNIQUE(filial_id)
);

-- 3. Verificar se foi criada
SELECT 
  table_name,
  column_name,
  data_type
FROM information_schema.columns 
WHERE table_name = 'configuracoes_horarios'
ORDER BY ordinal_position;

-- 4. Inserir configuração padrão para a filial Mantena (ID 18)
INSERT INTO configuracoes_horarios (filial_id, horario_inicio, horario_fim, intervalo_minutos, horarios_almoco)
VALUES (
  18, 
  '08:00', 
  '18:00', 
  10, 
  '{"inicio": "12:00", "fim": "15:00"}'
)
ON CONFLICT (filial_id) 
DO UPDATE SET
  horario_inicio = EXCLUDED.horario_inicio,
  horario_fim = EXCLUDED.horario_fim,
  intervalo_minutos = EXCLUDED.intervalo_minutos,
  horarios_almoco = EXCLUDED.horarios_almoco,
  updated_at = NOW();

-- 5. Verificar configuração salva
SELECT 
  id,
  filial_id,
  horario_inicio,
  horario_fim,
  intervalo_minutos,
  horarios_almoco
FROM configuracoes_horarios
WHERE filial_id = 18; 