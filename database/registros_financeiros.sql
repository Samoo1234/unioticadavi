-- Tabela para registros financeiros específicos de agendamentos
-- Esta tabela complementa o schema principal para o módulo Financeiro

BEGIN;

-- Tabela de Registros Financeiros para Agendamentos
CREATE TABLE IF NOT EXISTS registros_financeiros (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  agendamento_id BIGINT NOT NULL REFERENCES agendamentos(id) ON DELETE CASCADE,
  cliente VARCHAR(255) NOT NULL,
  valor VARCHAR(50) NOT NULL,
  tipo VARCHAR(100) NOT NULL, -- particular, convenio, etc
  forma_pagamento VARCHAR(100) NOT NULL, -- dinheiro, cartao, pix, etc
  situacao VARCHAR(50) NOT NULL, -- pago, pendente, cancelado
  observacoes TEXT,
  data_pagamento DATE,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  CONSTRAINT valid_situacao CHECK (situacao IN ('pago', 'pendente', 'cancelado'))
);

-- Índices para performance
CREATE INDEX IF NOT EXISTS idx_registros_financeiros_agendamento_id ON registros_financeiros(agendamento_id);
CREATE INDEX IF NOT EXISTS idx_registros_financeiros_situacao ON registros_financeiros(situacao);
CREATE INDEX IF NOT EXISTS idx_registros_financeiros_tipo ON registros_financeiros(tipo);
CREATE INDEX IF NOT EXISTS idx_registros_financeiros_data_pagamento ON registros_financeiros(data_pagamento);

-- Trigger para updated_at
CREATE TRIGGER set_timestamp_registros_financeiros 
  BEFORE UPDATE ON registros_financeiros 
  FOR EACH ROW EXECUTE FUNCTION trigger_set_timestamp();

-- Política RLS
ALTER TABLE registros_financeiros ENABLE ROW LEVEL SECURITY;

-- Política para acesso baseado na filial do agendamento
CREATE POLICY "Usuários veem registros financeiros da sua filial" ON registros_financeiros FOR SELECT USING (
  EXISTS (
    SELECT 1 FROM usuarios u 
    JOIN agendamentos a ON a.id = registros_financeiros.agendamento_id
    WHERE u.id = auth.uid() 
    AND (u.filial_id = a.filial_id OR u.role IN ('super_admin', 'admin', 'financial'))
    AND u.ativo = true
  )
);

-- Política para inserção
CREATE POLICY "Usuários podem inserir registros financeiros da sua filial" ON registros_financeiros FOR INSERT WITH CHECK (
  EXISTS (
    SELECT 1 FROM usuarios u 
    JOIN agendamentos a ON a.id = agendamento_id
    WHERE u.id = auth.uid() 
    AND (u.filial_id = a.filial_id OR u.role IN ('super_admin', 'admin', 'financial'))
    AND u.ativo = true
  )
);

-- Política para atualização
CREATE POLICY "Usuários podem atualizar registros financeiros da sua filial" ON registros_financeiros FOR UPDATE USING (
  EXISTS (
    SELECT 1 FROM usuarios u 
    JOIN agendamentos a ON a.id = registros_financeiros.agendamento_id
    WHERE u.id = auth.uid() 
    AND (u.filial_id = a.filial_id OR u.role IN ('super_admin', 'admin', 'financial'))
    AND u.ativo = true
  )
);

-- Política para exclusão
CREATE POLICY "Usuários podem excluir registros financeiros da sua filial" ON registros_financeiros FOR DELETE USING (
  EXISTS (
    SELECT 1 FROM usuarios u 
    JOIN agendamentos a ON a.id = registros_financeiros.agendamento_id
    WHERE u.id = auth.uid() 
    AND (u.filial_id = a.filial_id OR u.role IN ('super_admin', 'admin', 'financial'))
    AND u.ativo = true
  )
);

COMMIT;

SELECT 'Tabela registros_financeiros criada com sucesso!' as status;